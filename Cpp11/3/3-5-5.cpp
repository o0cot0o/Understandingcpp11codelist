/*
类型收窄： 新类型无法表示原有类型数据的值

    从浮点数隐式转换为整型数

    从高精度的浮点数转为低精度的浮点数

    从整型（或者非强类型的枚举）转化为浮点型

    从整型（或者非强类型的枚举）转化为较低长度的整型

*/
// 初始化列表可以防止类型收窄

const int x = 1024;
const int y = 10;
// 使用赋值表达式及圆括号的表达式初始化，所以不会编译失败， char范围 (-127, 128)
char a = x;                     // 收窄,但可以通过编译
char *b = new char(1024);       // 收窄,但可以通过编译

char c = {x};                   // 收窄,无法通过编译
char d = {y};                   // 可以通过编译 
unsigned char e {-1};           // 收窄,无法通过编译

float f{7};                     // 可以通过编译 
int g {2.0f};                   // 收窄,但可以通过编译
float *h = new float{1e48};     // 收窄,但可以通过编译
float i = 1.2l;                 // 可以通过编译 